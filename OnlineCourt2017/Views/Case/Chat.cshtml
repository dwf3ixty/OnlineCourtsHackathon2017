@model OnlineCourt2017.Data.Models.Case
@{
    ViewBag.Title = "Contact Virtual Case Officer";
}

<h2>@ViewBag.Title</h2>

@Html.Partial("_CaseOverview", Model)

<div class="container">
    <div class="col-lg-6">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Message..." id="message" style="min-width:100%;">
            <span class="input-group-btn">
                <button class="btn btn-secondary" type="button" id="sendmessage">Send</button>
            </span>
        </div>
        </div>
        @*<input type="text" id="message" class="form-control"/>
            <input type="button" id="sendmessage" value="Send" />*@
        <input type="hidden" id="displayname" />
    @*<div>
        <ul id="discussion"></ul>
    </div>*@
    </div>
<br/>
    <div class="panel panel-primary">
        <div class="panel-heading">Chat</div>
        <div class="panel-body" style="height: 400px; overflow: auto;" id="discussion">

        </div>
    </div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $('#displayname').val('@ViewBag.UserDisplayName');
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                //$('#discussion').append('<li><strong>' + htmlEncode(name)
                //    + '</strong>: ' + message + '</li>');

                addChatEntry(name, message);
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    addChatEntry($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });

                $('#message').keyup(function (event) {
                    if (event.which == 13) {
                        $('#sendmessage').click();
                    }
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function addChatEntry(name, message) {
            $('#discussion').append('<div><div><small>' + name + '</small></div><div>' + message + '</div>');

            var objDiv = document.getElementById("discussion");
            objDiv.scrollTop = objDiv.scrollHeight;
        }
    </script>
}